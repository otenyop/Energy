package ke.energy.model.components.vo.cm;

import java.sql.Timestamp;

import ke.energy.common.baseclasses.ViewRowImpl;
import ke.energy.model.components.eo.cm.cmCurrenciesEOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jun 25 21:18:49 EAT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class cmCurrenciesVORowImpl extends ViewRowImpl {


    public static final int ENTITY_CMCURRENCIESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CurrencyCode,
        Name,
        Description,
        Precision,
        ExtendedPrecision,
        EnabledFlag,
        Symbol,
        StartDateActive,
        EndDateActive,
        CreatedBy,
        CreationDate,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        CheckRowStatus;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CURRENCYCODE = AttributesEnum.CurrencyCode.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int PRECISION = AttributesEnum.Precision.index();
    public static final int EXTENDEDPRECISION = AttributesEnum.ExtendedPrecision.index();
    public static final int ENABLEDFLAG = AttributesEnum.EnabledFlag.index();
    public static final int SYMBOL = AttributesEnum.Symbol.index();
    public static final int STARTDATEACTIVE = AttributesEnum.StartDateActive.index();
    public static final int ENDDATEACTIVE = AttributesEnum.EndDateActive.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CHECKROWSTATUS = AttributesEnum.CheckRowStatus.index();

    /**
     * This is the default constructor (do not remove).
     */
    public cmCurrenciesVORowImpl() {
    }

    /**
     * Gets cmCurrenciesEO entity object.
     * @return the cmCurrenciesEO
     */
    public cmCurrenciesEOImpl getcmCurrenciesEO() {
        return (cmCurrenciesEOImpl) getEntity(ENTITY_CMCURRENCIESEO);
    }

    /**
     * Gets the attribute value for CURRENCY_CODE using the alias name CurrencyCode.
     * @return the CURRENCY_CODE
     */
    public String getCurrencyCode() {
        return (String) getAttributeInternal(CURRENCYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENCY_CODE using the alias name CurrencyCode.
     * @param value value to set the CURRENCY_CODE
     */
    public void setCurrencyCode(String value) {
        setAttributeInternal(CURRENCYCODE, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for PRECISION using the alias name Precision.
     * @return the PRECISION
     */
    public Integer getPrecision() {
        return (Integer) getAttributeInternal(PRECISION);
    }

    /**
     * Sets <code>value</code> as attribute value for PRECISION using the alias name Precision.
     * @param value value to set the PRECISION
     */
    public void setPrecision(Integer value) {
        setAttributeInternal(PRECISION, value);
    }

    /**
     * Gets the attribute value for EXTENDED_PRECISION using the alias name ExtendedPrecision.
     * @return the EXTENDED_PRECISION
     */
    public Integer getExtendedPrecision() {
        return (Integer) getAttributeInternal(EXTENDEDPRECISION);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTENDED_PRECISION using the alias name ExtendedPrecision.
     * @param value value to set the EXTENDED_PRECISION
     */
    public void setExtendedPrecision(Integer value) {
        setAttributeInternal(EXTENDEDPRECISION, value);
    }

    /**
     * Gets the attribute value for ENABLED_FLAG using the alias name EnabledFlag.
     * @return the ENABLED_FLAG
     */
    public String getEnabledFlag() {
        return (String) getAttributeInternal(ENABLEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ENABLED_FLAG using the alias name EnabledFlag.
     * @param value value to set the ENABLED_FLAG
     */
    public void setEnabledFlag(String value) {
        setAttributeInternal(ENABLEDFLAG, value);
    }

    /**
     * Gets the attribute value for SYMBOL using the alias name Symbol.
     * @return the SYMBOL
     */
    public String getSymbol() {
        return (String) getAttributeInternal(SYMBOL);
    }

    /**
     * Sets <code>value</code> as attribute value for SYMBOL using the alias name Symbol.
     * @param value value to set the SYMBOL
     */
    public void setSymbol(String value) {
        setAttributeInternal(SYMBOL, value);
    }

    /**
     * Gets the attribute value for START_DATE_ACTIVE using the alias name StartDateActive.
     * @return the START_DATE_ACTIVE
     */
    public Timestamp getStartDateActive() {
        return (Timestamp) getAttributeInternal(STARTDATEACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for START_DATE_ACTIVE using the alias name StartDateActive.
     * @param value value to set the START_DATE_ACTIVE
     */
    public void setStartDateActive(Timestamp value) {
        setAttributeInternal(STARTDATEACTIVE, value);
    }

    /**
     * Gets the attribute value for END_DATE_ACTIVE using the alias name EndDateActive.
     * @return the END_DATE_ACTIVE
     */
    public Timestamp getEndDateActive() {
        return (Timestamp) getAttributeInternal(ENDDATEACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DATE_ACTIVE using the alias name EndDateActive.
     * @param value value to set the END_DATE_ACTIVE
     */
    public void setEndDateActive(Timestamp value) {
        setAttributeInternal(ENDDATEACTIVE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public Long getLastUpdateLogin() {
        return (Long) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(Long value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Long getLastUpdatedBy() {
        return (Long) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Long value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CheckRowStatus.
     * @return the CheckRowStatus
     */
    public Integer getCheckRowStatus() {
        byte entityState = this.getEntity(0).getEntityState();
        return new Integer(entityState);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CheckRowStatus.
     * @param value value to set the  CheckRowStatus
     */
    public void setCheckRowStatus(Integer value) {
        setAttributeInternal(CHECKROWSTATUS, value);
    }

}

